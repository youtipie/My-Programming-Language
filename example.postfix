.target: Postfix Machine
.version: 0.2

.vars(
   n10 intnum 
   n20 intnum 
   n30 intnum 
   e10 intnum 
   e20 boolval 
   e30 floatnum 
   ðŸ˜ŠðŸ¤¢ä¸­æ–‡0 intnum 
   read0 intnum 
   empty0 intnum 
   b0 boolval 
   i0 intnum 
   temp0 floatnum 
   _0 intnum 
)

.labels(
   m1 23 
   m2 185 
   m3 179 
   m4 61 
   m5 113 
   m6 73 
   m7 91 
   m8 82 
   m9 109 
   m10 103 
   m11 105 
   m12 153 
   m13 171 
   m14 162 
   m15 175 
)

.constants(
   1 intnum 
   2 intnum 
   3 intnum 
   10 intnum 
   100 intnum 
   50 intnum 
   60 intnum 
   true boolval 
   false boolval 
   0 intnum 
   20 intnum 
)

.code(
   n10 l-val 
   1 intnum 
   = assign_op 
   n20 l-val 
   2 intnum 
   = assign_op 
   n30 l-val 
   3 intnum 
   = assign_op 
   read0 l-val 
   IN readline 
   empty0 l-val 
   1 intnum 
   = assign_op 
   empty0 r-val 
   10 intnum 
   == rel_op 
   m1 label 
   JF jf 
   empty0 r-val 
   OUT print 
   m2 label 
   JMP jump 
   m1 label 
   : colon 
   empty0 r-val 
   read0 r-val 
   != rel_op 
   m3 label 
   JF jf 
   100 intnum 
   NEG add_op 
   read0 r-val 
   <= rel_op 
   OUT print 
   read0 r-val 
   100 intnum 
   <= rel_op 
   OUT print 
   50 intnum 
   read0 r-val 
   < rel_op 
   OUT print 
   read0 r-val 
   60 intnum 
   < rel_op 
   OUT print 
   50 intnum 
   50 intnum 
   > rel_op 
   OUT print 
   50 intnum 
   50 intnum 
   >= rel_op 
   OUT print 
   b0 l-val 
   true boolval 
   = assign_op 
   b0 l-val 
   false boolval 
   = assign_op 
   m4 label 
   : colon 
   b0 r-val 
   true boolval 
   != rel_op 
   m5 label 
   JF jf 
   i0 l-val 
   0 intnum 
   = assign_op 
   m6 label 
   JMP jump 
   m6 label 
   : colon 
   i0 r-val 
   100 intnum 
   < rel_op 
   m9 label 
   JF jf 
   m7 label 
   JMP jump 
   m8 label 
   : colon 
   i0 l-val 
   i0 r-val 
   1 intnum 
   + add_op 
   = assign_op 
   m6 label 
   JMP jump 
   m7 label 
   : colon 
   i0 r-val 
   read0 r-val 
   == rel_op 
   m10 label 
   JF jf 
   b0 l-val 
   true boolval 
   = assign_op 
   m11 label 
   JMP jump 
   m10 label 
   : colon 
   m11 label 
   : colon 
   m8 label 
   JMP jump 
   m9 label 
   : colon 
   m4 label 
   JMP jump 
   m5 label 
   : colon 
   temp0 l-val 
   10 intnum 
   2 intnum 
   * mult_op 
   3 intnum 
   20 intnum 
   read0 r-val 
   + add_op 
   / mult_op 
   read0 r-val 
   ^ power_op 
   + add_op 
   = assign_op 
   temp0 r-val 
   OUT print 
   2 intnum 
   2 intnum 
   3 intnum 
   ^ power_op 
   ^ power_op 
   OUT print 
   2 intnum 
   2 intnum 
   ^ power_op 
   3 intnum 
   ^ power_op 
   OUT print 
   2 intnum 
   2 intnum 
   3 intnum 
   ^ power_op 
   ^ power_op 
   OUT print 
   _0 l-val 
   0 intnum 
   = assign_op 
   m12 label 
   JMP jump 
   m12 label 
   : colon 
   _0 r-val 
   1 intnum 
   <= rel_op 
   m15 label 
   JF jf 
   m13 label 
   JMP jump 
   m14 label 
   : colon 
   _0 l-val 
   _0 r-val 
   1 intnum 
   + add_op 
   = assign_op 
   m12 label 
   JMP jump 
   m13 label 
   : colon 
   m14 label 
   JMP jump 
   m15 label 
   : colon 
   m2 label 
   JMP jump 
   m3 label 
   : colon 
   empty0 r-val 
   OUT print 
   m2 label 
   JMP jump 
   m2 label 
   : colon 
)
